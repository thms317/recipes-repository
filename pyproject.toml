[project]
name = "recipes_repository"
version = "1.3.2"
description = "Create beautiful HTML recipes from markdown - recipes_repository package."
authors = [
    { name = "Thomas Brouwer", email = "notifications@example.com" },
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "docling>=2.31.1",
    "ipykernel>=6.29.5",
    "ipython>=9.2.0",
    "jupyter>=1.1.1",
    "mkdocs-material>=9.6.13",
    "mkdocs>=1.6.1",
    "tabulate>=0.9.0",
    "pymupdf>=1.25.5",
    "pillow>=11.1.0",
]

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pdoc3>=0.11.5",
    "pre-commit>=4.1.0",
    "pydoclint>=0.6.6",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest>=8.4.1",
    "ruff>=0.12.4",
]

[tool.uv]
package = true

[project.entry-points."mkdocs.plugins"]
recipes = "recipes_repository:RecipePlugin"

[tool.ruff]
target-version = "py312"
line-length = 100
extend-include = ["*.ipynb"]
extend-exclude = ["scratch"]

[tool.ruff.lint]
pydocstyle.convention = "numpy"
external = ["DOC"]
select = ["ALL"]
ignore = [
    "ANN401",   # "Dynamically typed expressions (typing.Any) are disallowed in `*args` / `**kwargs`.
    "D203",     # "One blank line required before class docstring." Should be disabled by default.
    "D213",     # "Multi-line docstring summary should start at the second line." Should be disabled by default.
    "E501",     # "Line too long."
    "ERA001",   # "Found commented out code."
    "FBT001",   # "Boolean positional arg in function definition.""
    "FBT002",   # "Boolean default value in function definition."
    "ISC001",   # "Implicit string concatenation." Ignored since it conflicts with the formatter.
    "S608",     # "Possible SQL injection vector through string-based query construction."
    "T201",     # "`print` found."
]
unfixable = [
    "F401",     # "Unused import."
]

[tool.ruff.lint.per-file-ignores]
"notebooks/**/*.py" = [
    "D100",     # "Missing docstring in public module." Not needed for notebooks.
    "INP001",   # "Part of an implicit namespace package. Add an `__init__.py`." Not needed for notebooks.
]
"tests/*.py" = [
    "PLR2004",  # "Magic value used in comparison, consider replacing with a constant variable."
    "S101",     # "Use of `assert` detected."
]

[tool.mypy]
packages = ["src"]
python_version = "3.12"
mypy_path = ["src"]
strict = true
disallow_untyped_decorators = false
disallow_untyped_calls = false
exclude = "scratch"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
omit = ["*/__init__.py"]

[tool.pydoclint]
style = "numpy"
exclude = ".git|.venv|scratch"
